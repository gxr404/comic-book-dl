import { expect, test, describe } from 'vitest'
import { Dmzj } from '@/lib/parse/dmzj'
import type { BookInfo } from '@/lib/parse/base'
import {ApiV4ChapterImageParse, ApiV4ChapterListParse, ApiV4Decrypt} from '../../src/lib/parse/dmzj/crypto'

describe('parseBookInfo', () => {
  test('parseBookInfo正常解析: mobile site', async () => {
    const dmzj = new Dmzj('https://m.idmzj.com/info/qishishiyimeizuijinchuxiandeyilididiguoyuqinmile.html')
    const _bookInfo = await dmzj.parseBookInfo()
    expect.soft(_bookInfo).not.toBeFalsy()
    const bookInfo = _bookInfo as BookInfo
    expect.soft(bookInfo.name).toBeTruthy()
    expect.soft(bookInfo.url).toBeTruthy()
    expect.soft(bookInfo.author).toBeTruthy()
    expect.soft(bookInfo.coverUrl).toBeTruthy()
    expect.soft(bookInfo.desc).toBeTruthy()
    expect.soft(bookInfo.chapters.length).toBeGreaterThan(0)
  })
  test('parseBookInfo正常解析: pc site', async () => {
    // const dmzj = new Dmzj('https://www.idmzj.com/info/qishishiyimeizuijinchuxiandeyilididiguoyuqinmile.html')
    const dmzj = new Dmzj('https://www.idmzj.com/info/yaoshenji.html')
    const _bookInfo = await dmzj.parseBookInfo()
    expect.soft(_bookInfo).not.toBeFalsy()
    const bookInfo = _bookInfo as BookInfo
    expect.soft(bookInfo.name).toBeTruthy()
    expect.soft(bookInfo.url).toBeTruthy()
    expect.soft(bookInfo.author).toBeTruthy()
    expect.soft(bookInfo.coverUrl).toBeTruthy()
    expect.soft(bookInfo.desc).toBeTruthy()
    expect.soft(bookInfo.chapters.length).toBeGreaterThan(0)
  })
  test('parse Info preChapters and nextChapters', async () => {
    const dmzj = new Dmzj('https://m.idmzj.com/info/swdjmxzdwbzwhbyzdwqrszbwncs.html')
    const _bookInfo = await dmzj.parseBookInfo()
    expect.soft(_bookInfo).not.toBeFalsy()
    const bookInfo = _bookInfo as BookInfo

    expect.soft(bookInfo.chapters[0].preChapter).toBeUndefined()
    expect.soft(bookInfo.chapters[0].nextChapter).toHaveProperty('name')
    expect.soft(bookInfo.chapters[0].nextChapter).toHaveProperty('href')

    const lastIndex = bookInfo.chapters.length - 1
    expect.soft(bookInfo.chapters[lastIndex].nextChapter).toBeUndefined()
    expect.soft(bookInfo.chapters[lastIndex].preChapter).toHaveProperty('name')
    expect.soft(bookInfo.chapters[lastIndex].preChapter).toHaveProperty('href')
  })
  test('error url',async () => {
    const dmzj = new Dmzj('https://m.idmzj.com/info/1233')
    const isSuccess = await dmzj.parseBookInfo()
    expect.soft(isSuccess).toBeFalsy()
  })
})


describe('getImgList', () => {
  test('getImgList正常解析: mobile stie', async () => {
    const dmzj = new Dmzj()
    const url = 'https://m.idmzj.com/view/62324/140451.html'
    const imgList = await dmzj.getImgList(url)
    expect.soft(imgList).toHaveLength(15)

  })

})

describe('crypto api v4', () => {
  test('decrypt chapter images', async () => {
    const data = ''
    const decryptData = ApiV4ChapterImageParse(ApiV4Decrypt(data))
    expect.soft(decryptData).not.toBeFalsy()
    expect.soft(decryptData?.Name).toBeTruthy()
    expect.soft( decryptData?.Images.length).toBeGreaterThan(0)
    expect.soft( decryptData?.LowResImages.length).toBeGreaterThan(0)
  })
  test('decrypt chapter list', async () => {
    const data = 'KqpyZ0FDcrBuh2HEBnQJw1Np0LhtiTJSOOUGm761FHWg/dGmEetjArbDHnqsE2qqZpJzeBUw+1j1EYgGEDbKRTvQqKr8ozGgyswBlDgzggBfF3zxH720vuKEyR1qsBn9HZWvGyBmkKPgsjVkdVXjCnmQwszYuHvuAkIqQopORHwrXJ0M0ohnZUN28tQ5i5fR0wnXb22YqqqHKTWYStT3md2U+w9VhUKd5hBG2Pl50CUEiExUF2txDwGRhNdkMYaOVJCPTdvhb75KLc8XOJ6YG2xm6iKmfNjG/hmU2muxEhcb1kwiMI2NIVL5zLEwxzed98o9JrDHtkoTPAA3BYwIwZ/6Rm+jY4aWxyErF3NEgm1w9+n3zPw+BgmoTramYn8avQDvwkeRLRh0gGP4aUa/KnnBnNzM5AJFLZEcak9o+Y3LNcRzgsowqbumtQycUd9MP3pY3rItt7+uOy09VLU4I4SKXQnUX1hVAqEO2GchkKo8jfban8TT9ryJee7ZY8sDcUH8nIXPNT3Owi3UwiQJ9st1iDAmKsh88jRs4fmAhwpysvJYbn49L8xj1a8m7RUVH33vQpsqidzGafJh1Yj6w+ffO/BCpA9MQUpEmOEp2z5dlzD64p2+xODYVH5das0uhRHvh/UYbya8QqoYWVEr0vwGM+3eRwCDW4218Ucf2IB4AzYWdoDwBuGRTGpSZ2x3b3/wl6EiHNrPiTx45i7CMAST/BH4asGws9OJ0k+d99LX4VZCwPqbH7Oc9do9WHpGKGxSOJ20fZs2fiTkh0Ml4a/Kb0V0YAJ2c+yNTOJpJKCj6lq6uqdDiDTMWWA6K35rETYB97RjCPHJuuHDr3CZ9ycRc1Pj/G6iIbxYen6wRpUnfvO5pYuQWXp/mf5V5aAV5mde9ATEmLmPR0+hMjWM7CBMQIdX8JZ6UQ9M90Q7Ql6ykIuKXQTvbdqI5yz/ZqUrAmQWWKTxHo4X2flw3c/gKhs+Ciaos5tg+c//gBSaogdk9CYGoN7cjfR9XhgUTBq6LzY7+56K66Jrx/7ALFVlBBjWws563103WQpNCImGC2kWW2MOhVuQzuwaMjYRY4ESNwvv2Fv5OSZLy9ebYJWqZpifFbDfyWig+dfkZPwIiqBXXtizC0+1Z/JlT0EeanO6Dd2sEaSMgT52va8I62d1ezOnYtebHftYkAXFYjlfgKeM9ObgGyXY8yqjyMLXQ0Uk0cki90/Cu9ymPcK8afnLyosXV07XY+cTxMxKC7d8Gt0BC1yTiBEmMdgalkPoOAGgddufuxAEcYoI4h4MJ1sPcjJ3Ou/CM77tgGWvRV+uYSuqiAqBq2ria/eMttXG1eFJt4tAkIfHmjX6Alhg4vUiq4FFAgGZpMyRVcyvGZAO6V3OhfGEaMJKxRAKqaWt53xuJlmqeKs/Eagjq1WLgKq3SobZUkvyu7oqltzhOJF7XH8nQ9LZ0N0OAP1TD/cbqIBeAKzBUw4qASkVGb5yK1aIOQrrPybOzIqxXU3/e3NNtOia0b2VIqRWt5V+5/nreZOnEel6szJZcvyU3JYMje4xrbG/A9FGz0oWcwS3/2oXer++tc31kiZ/65JHQ+XyeR4PjylqwwB54zLVD/MjjVqAS4fIk6KkmuAmNNy62VOqNiAUTJrRvQ9BuX0wDLPqjdA1osytEh+tXbuIpH/Z6mt2wqYAwXbIbL1w/9AHLfWbsdM='
    const decryptData = ApiV4ChapterListParse(ApiV4Decrypt(data))
    expect.soft(decryptData).not.toBeFalsy()
    expect.soft( decryptData?.Chapters.length).toBeGreaterThan(0)
  })
})

